{"version":3,"sources":["js/apiService.js","js/modal.js"],"names":["perPage","fetchImages","image","pageNum","url","fetch","console","log","then","response","json","images","fetchImagesByID","id","modalWIndow","document","querySelector","modalBtnClouse","modalImg","overlay","onImagesClick","evt","target","classList","contains","imgUrl","renderBigImmages","error","stack","add","src","hits","largeImageURL","clousedModalWindow","remove","onEscKeyPress","code","addEventListener","window"],"mappings":";AA8BiB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA7BjB,IAAIA,EAAU,GAGd,SAASC,EAAYC,EAAOC,GAElBC,MAAAA,wEAA4EF,UAAcC,cAAoBH,2CAE7GK,OADRC,QAAQC,IAAIH,GACJC,MAAMD,GACZI,KAAKC,GAAYA,EAASC,QAC1BF,KAAKG,IACJL,QAAQC,IAAII,GACLA,IAKX,SAASC,EAAgBC,GAEjBT,MAAAA,yEAA6ES,2CAE5ER,OADRC,QAAQC,IAAIH,GACJC,MAAMD,GACZI,KAAKC,GAAYA,EAASC,QAC1BF,KAAKG,IACJL,QAAQC,IAAII,GACLA,IAKI,IAAA,EAAA,CAACV,YAAAA,EAAYW,gBAAAA,GAAb,QAAA,QAAA;;ACoBA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAjDjB,IAAA,EAAA,EAAA,QAAA,iBAiDiB,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAhDjB,MAAME,EAAcC,SAASC,cAAc,gBACrCC,EAAiBF,SAASC,cAAc,kCACxCE,EAAWH,SAASC,cAAc,oBAClCG,EAAUJ,SAASC,cAAc,sBACvC,IAAIH,EAAK,EAMT,eAAeO,EAAcC,GACzB,IAEE,IADeA,EAAIC,OAAOC,UAAUC,SAAS,kBAE7C,OAEJX,EAAKQ,EAAIC,OAAOT,GACjBP,QAAQC,IAAIM,GACRD,EAAAA,QAAAA,gBAAgBC,GACnBL,KAAKiB,IAAWC,EAAiBD,KAChC,MAAOE,GACRrB,QAAQC,IAAIoB,EAAMC,QAInB,eAAeF,EAAiBD,GAC1B,IAEHX,EAAYS,UAAUM,IAAI,WAC1BX,EAASY,IAAML,EAAOM,KAAK,GAAGC,cAE7B,MAAOL,GACRrB,QAAQC,IAAIoB,EAAMC,QAItB,SAASK,IACPf,EAASY,IAAM,GACfhB,EAAYS,UAAUW,OAAO,WAG/B,SAASC,EAAcd,GAEH,WAAbA,EAAIe,MACPH,IArCJhB,EAAeoB,iBAAiB,QAASJ,GACzCK,OAAOD,iBAAiB,UAAWF,GAwClB,IAAA,EAAA,CAACf,cAAAA,GAAD,QAAA,QAAA","file":"modal.beac64c3.js","sourceRoot":"../src","sourcesContent":["\nlet perPage = 22;\n\n\nfunction fetchImages(image, pageNum ) {\n  \n    const url = `https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${image}&page=${pageNum}&per_page=${perPage}&key=22353010-e1640ec84a31ac5dbc2cb01be`;\n   console.log(url);\n    return fetch(url)\n    .then(response => response.json())\n    .then(images => {\n      console.log(images);\n      return images\n       });  \n//  console.log(images);\n  }\n\n  function fetchImagesByID(id ) {\n  \n    const url = `https://pixabay.com/api/?image_type=photo&orientation=horizontal&id=${id}&key=22353010-e1640ec84a31ac5dbc2cb01be`;\n   console.log(url);\n    return fetch(url)\n    .then(response => response.json())\n    .then(images => {\n      console.log(images);\n      return images\n       });  \n  };\n \n \n  export default {fetchImages,fetchImagesByID};\n\n","\nimport API from './apiService';\nconst modalWIndow = document.querySelector('.js-lightbox');\nconst modalBtnClouse = document.querySelector('[data-action=\"close-lightbox\"]');\nconst modalImg = document.querySelector('.lightbox__image');\nconst overlay = document.querySelector('.lightbox__overlay');\nlet id = 0;\n\n\nmodalBtnClouse.addEventListener('click', clousedModalWindow);\nwindow.addEventListener('keydown', onEscKeyPress);\n\nasync function onImagesClick(evt) {   \ntry {\n  const isImagesEl = evt.target.classList.contains('gallery__image');\n  if (!isImagesEl) {\n      return;\n};    \n  id = evt.target.id;//ссылка на текущий элемент на которий кликнули\n console.log(id);\n API.fetchImagesByID(id)\n .then(imgUrl => {renderBigImmages(imgUrl)})\n } catch (error) {\n  console.log(error.stack);\n}\n };\n\n async function renderBigImmages(imgUrl){\n   try {    \n    // window.removeEventListener('scroll',scrollImages);\n    modalWIndow.classList.add('is-open');\n    modalImg.src = imgUrl.hits[0].largeImageURL;\n    \n   } catch (error) {\n    console.log(error.stack);\n   }\n };\n\nfunction clousedModalWindow() {\n  modalImg.src = '';\n  modalWIndow.classList.remove('is-open')\n};\n\nfunction onEscKeyPress(evt) {\n\n   if (evt.code === 'Escape') {\n    clousedModalWindow()\n }\n};\n\n  export default {onImagesClick};\n\n "]}